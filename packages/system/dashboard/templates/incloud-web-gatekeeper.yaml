apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/instance: incloud-web
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gatekeeper
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: appSpec-0.1.0
  name: incloud-web-gatekeeper
  namespace: incloud-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: incloud-web
      app.kubernetes.io/name: gatekeeper
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/instance: incloud-web
        app.kubernetes.io/name: gatekeeper
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - appSpec
                    - key: app.kubernetes.io/instance
                      operator: In
                      values:
                        - incloud-web
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - args:
            - --client-id=dashboard
            - --client-secret=5XaRqvm8k5QHHhgNWJ8odFACquowgZ8e
            - --discovery-url=https://keycloak.dev5.infra.aenix.org/realms/cozy
            - --enable-refresh-tokens=true
            - --encryption-key=5XaRqvm8k5QHHhgNWJ8odFACquowgZ8e
            - --listen=0.0.0.0:8000
            - --redirection-url=https://dashboard.dev5.infra.aenix.org
            - --resources=uri=/*
            - --scopes=openid profile email groups offline_access
            - --server-write-timeout=30s
            - --skip-openid-provider-tls-verify=true
            - --upstream-response-header-timeout=30s
            - --upstream-url=http://incloud-web-nginx.incloud-web.svc:8080
          image: dmkolbin/gatekeeper:0.2.0
          imagePullPolicy: IfNotPresent
          #livenessProbe:
          #  failureThreshold: 3
          #  httpGet:
          #    path: /oauth/healthcheck
          #    port: 8000
          #    scheme: HTTP
          #  initialDelaySeconds: 3
          #  periodSeconds: 10
          #  successThreshold: 1
          #  timeoutSeconds: 2
          name: gatekeeper
          ports:
            - containerPort: 8000
              name: ingress
              protocol: TCP
          #readinessProbe:
          #  failureThreshold: 3
          #  httpGet:
          #    path: /oauth/healthcheck
          #    port: 8000
          #    scheme: HTTP
          #  initialDelaySeconds: 3
          #  periodSeconds: 10
          #  successThreshold: 1
          #  timeoutSeconds: 2
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts: null
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostIPC: false
      hostNetwork: false
      hostPID: false
      preemptionPolicy: null
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      runtimeClassName: null
      schedulerName: default-scheduler
      serviceAccountName: incloud-web-gatekeeper
      terminationGracePeriodSeconds: 30
      volumes: null
