##
## @section Common parameters
##

## @typedef {struct} Resources - Explicit CPU and memory configuration for each ClickHouse replica.
## @field {quantity} [cpu] - CPU available to each replica.
## @field {quantity} [memory] - Memory (RAM) available to each replica.

## @enum {string} ResourcesPreset - Default sizing preset.
## @value nano
## @value micro
## @value small
## @value medium
## @value large
## @value xlarge
## @value 2xlarge

## @param {int} replicas - Number of ClickHouse replicas.
replicas: 2

## @param {int} shards - Number of ClickHouse shards.
shards: 1

## @param {Resources} [resources] - Explicit CPU and memory configuration for each ClickHouse replica. When omitted, the preset defined in `resourcesPreset` is applied.
resources: {}

## @param {ResourcesPreset} resourcesPreset="small" - Default sizing preset used when `resources` is omitted.
resourcesPreset: "small"

## @param {quantity} size - Persistent Volume Claim size available for application data.
size: 10Gi

## @param {string} storageClass - StorageClass used to store the data.
storageClass: ""

##
## @section Application-specific parameters
##

## @param {quantity} logStorageSize - Size of Persistent Volume for logs.
logStorageSize: 2Gi

## @param {int} logTTL - TTL (expiration time) for `query_log` and `query_thread_log`.
logTTL: 15

## @typedef {struct} User - User configuration.
## @field {string} [password] - Password for the user.
## @field {bool} [readonly] - User is readonly (default: false).

## @param {map[string]User} users - Users configuration map.
users: {}
## Example:
## users:
##   user1:
##     password: strongpassword
##   user2:
##     readonly: true
##     password: hackme
##

##
## @section Backup parameters
##

## @typedef {struct} Backup - Backup configuration.
## @field {bool} enabled - Enable regular backups (default: false).
## @field {string} s3Region - AWS S3 region where backups are stored.
## @field {string} s3Bucket - S3 bucket used for storing backups.
## @field {string} schedule - Cron schedule for automated backups.
## @field {string} cleanupStrategy - Retention strategy for cleaning up old backups.
## @field {string} s3AccessKey - Access key for S3 authentication.
## @field {string} s3SecretKey - Secret key for S3 authentication.
## @field {string} resticPassword - Password for Restic backup encryption.

## @param {Backup} backup - Backup configuration.
backup:
  enabled: false
  s3Region: us-east-1
  s3Bucket: "s3.example.org/clickhouse-backups"
  schedule: "0 2 * * *"
  cleanupStrategy: "--keep-last=3 --keep-daily=3 --keep-within-weekly=1m"
  s3AccessKey: "<your-access-key>"
  s3SecretKey: "<your-secret-key>"
  resticPassword: "<password>"

##
## @section ClickHouse Keeper parameters
##

## @typedef {struct} ClickHouseKeeper - ClickHouse Keeper configuration.
## @field {bool} [enabled] - Deploy ClickHouse Keeper for cluster coordination.
## @field {quantity} [size] - Persistent Volume Claim size available for application data.
## @field {ResourcesPreset} [resourcesPreset] - Default sizing preset.
## @field {int} [replicas] - Number of Keeper replicas.

## @param {ClickHouseKeeper} clickhouseKeeper - ClickHouse Keeper configuration.
clickhouseKeeper:
  enabled: true
  size: 1Gi
  resourcesPreset: micro
  replicas: 3
